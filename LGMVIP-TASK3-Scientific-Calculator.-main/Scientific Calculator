import javax.swing.*;
import javax.swing.border.BevelBorder;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
public class ScientificCalculator {
	//By Mohit Ramesh Kulkarni.
    JFrame frmCalculator;
    String result="",expression="";
    ArrayList<String>token=new ArrayList<String>();
    boolean num=false;
    boolean dot=false;
    public static void main(String [] args){
        EventQueue.invokeLater(new Runnable(){
            public void run(){
                try{
                    Calculator window=new Calculator();
                    window.frmCalculator.setVisible(true);
                }catch(Exception e){
                    e.printStackTrace();
                }
            }
        });

    }
   ScientificCalculator(){
    initialize();
    }
    int precedence(String x)
    {
        int p=10;
        switch(x){
            case "+":
            p=1;
            break;
            case "-":
            p=2;
            break;
            case "x":
            p=3;
            break;
            case "/":
            p=4;
            break;
            case "^":
            p=6;
            break;
            case "!":
            p=7;
            break;
        }
        return p;
    }
    private boolean isoperator(String x){
        if(x.equals("+")||x.equals("-")||x.equals("/")||x.equals("sqrt")||x.equals("^") || x.equals("!") || x.equals("sin") || x.equals("cos") || x.equals("tan") || x.equals("ln") || x.equals("log"))
        return true;
        else
           return false;
}
private String infixTopostfix(){
    Stack <String> s=new Stack<String>();
    String y;
    int flag;
    String p="";
    token.add(")");
    s.push("(");
    for(String i:token){
        if(i.equals("(")){
            s.push(i);
        }else if(i.equals(")")){

            y=s.pop();
            while(!y.equals("("))
            {
                p=p+y+",";
                y=s.pop();
            }
        }else if(isoperator(i)){
            y=s.pop();
            flag=0;
            if(isoperator(y) && precedence(y)>precedence(i)){
                p=p+y+",";
                flag=1;
            }
            if(flag==0)
                s.push(y);
            
            s.push(i);
        }else{
            p=p+i+",";
        }
        while(!s.empty()){
            y=s.pop();
            if(!y.equals("(") && !y.equals(")")) {
				p+=y+",";
			}
         }
         


        }
       
		return p;

        }
        private double factorial(double y){
            double fact=1;
            if(y==0||y==1){
                fact=1;
            }else{
                for(int i=2;i<=y;i++){
                    fact*=i;
                }
            }
            return fact;
        }
        private double calculate(double x,double y,String c){
            double res=0;
            switch(c){
                case "-":
                res=x-y;
                break;
                case "+":
                res=x+y;
                break;
                case "x":
                res=x*y;
                break;
                case "/":
                res=x/y;
                break;
                case  "^":
				res= Math.pow(x,y);
				break;
                default:
                res=0;
             }
             return res;
        }
        private double calculate(double y,String c){
            double res=0;
            switch(c){
                case "log":
                res=Math.log10(y);
                break;
                case "sin":
			res= Math.sin(y);
			break;
		case "cos":
			res = Math.cos(y);
			break;
		case "tan":
			res =Math.tan(y);
			break;
		case "ln":
			res= Math.log(y);
			break;
		case "sqrt":
			res= Math.sqrt(y);
            break;
        case "!":
            res=factorial(y);
            break;   
        }
        return res;
        }
        private double Eval(String p){
            String tokens[]= p.split(",");
            ArrayList<String> token2=new ArrayList<String>();
            for(int i=0; i<tokens.length; i++) {
                if(! tokens[i].equals("") && ! tokens[i].equals(" ") && ! tokens[i].equals("\n") && ! tokens[i].equals("  ")) {
                    token2.add(tokens[i]);  
                }
            }
            Stack<Double> s=new Stack<Double>();
		double x,y;
		for(String  i:token2) {
			if(isoperator(i)){
				
				if(i.equals("sin") ||i.equals("cos") ||i.equals("tan") ||i.equals("log") || i.equals("ln") || i.equals("sqrt") || i.equals("!")) {
					y=s.pop();
					s.push(calculate(y,i));
				}else {
					
					y=s.pop();
					x=s.pop();
					s.push(calculate(x,y,i));
				}
			}else{
				if(i.equals("pi"))
					s.push(Math.PI);
				else if(i.equals("e"))
					s.push(Math.E);
				else
					s.push(Double.valueOf(i));
			}
		}
		double res=1;
		while(!s.empty()) {
			res*=s.pop();
		}
		return res;  
	}

	
	private void calculateMain() {
		String tokens[]=expression.split(",");
		for(int i=0; i<tokens.length; i++) {
			if(! tokens[i].equals("") && ! tokens[i].equals(" ") && ! tokens[i].equals("\n") && ! tokens[i].equals("  ")) {
				token.add(tokens[i]);  
			}
		}
		try {
			double res = Eval(infixTopostfix());
			result= Double.toString(res);
		}catch(Exception e) {}
	}
    private void initialize(){
        frmCalculator=new JFrame();
        frmCalculator.setResizable(false);
        frmCalculator.setTitle("Scientific Calculator");
        frmCalculator.getContentPane().setForeground(SystemColor.windowBorder);
        frmCalculator.getContentPane().setLayout(null);
        JPanel panel=new JPanel();
        panel.setBorder(new BevelBorder(BevelBorder.LOWERED,null,null,null,null));
        frmCalculator.getContentPane().add(panel);
        panel.setLayout(null);
        JLabel label=new JLabel("");
        label.setBackground(SystemColor.control);
        label.setHorizontalAlignment(SwingConstants.RIGHT);
        label.setForeground(UIManager.getColor("Button.disabledForeground"));
        label.setBounds(2, 2, 312, 27);
        panel.add(label);
        JTextField jTextField=new JTextField();
        label.setLabelFor(jTextField);
        jTextField.setHorizontalAlignment(SwingConstants.RIGHT);
		jTextField.setBackground(SystemColor.control);
		jTextField.setEditable(false);
		jTextField.setText("0");
		jTextField.setBorder(null);
        jTextField.setBounds(2, 30, 312, 49);
        panel.add(jTextField);
        jTextField.setColumns(10);
        JPanel panel2=new JPanel();
        panel2.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
        panel2.setBackground(SystemColor.inactiveCaptionBorder);
        panel2.setBounds(34, 120, 316, 322);
        frmCalculator.getContentPane().add(panel2);
        panel2.setLayout(new GridLayout(0, 5, 0, 0));
        JButton button=new JButton("C");
        button.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e){
                jTextField.setText("0");
                label.setText("");
                expression="";
                token.clear();
                result="";
                num=false;
                dot=false;
                
            }
        });
        panel.add(button);
        JButton button2=new JButton("del");
        button2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
				String s=jTextField.getText();
				if(s != "0" && s.length() > 1) {
					String newString = s.substring(0,s.length()-1);
					jTextField.setText(newString);
					if(expression.charAt(expression.length()-1)=='.') {
						dot=false;
					}
					if(expression.charAt(expression.length()-1) == ',') {
						expression = expression.substring(0,expression.length()-2);
					}else {
						expression = expression.substring(0,expression.length()-1);
					}
				}else {
					jTextField.setText("0");
					expression="";
				}
			}
		});
      panel.add(button2);
      JButton button3=new JButton("<html><body><span>Ï€</span></body></html>");
      button3.addActionListener(new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            if(! "0".equals(jTextField.getText())) {
                jTextField.setText(jTextField.getText()+Character.toString((char)960));
            }else {
                jTextField.setText(Character.toString((char)960));
            }
            expression += ",pi";
            num=false;
            dot=false;
        }
    });
    panel.add(button3);
    JButton button4 = new JButton("<html><body><span>X<sup>y</sup></span></body></html>");
		button4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"^");
					expression+=",^";
				}else {
					jTextField.setText("0^");
					expression += ",0,^";
				}
				num=false;
				dot=false;
			}
		});
        panel.add(button4);
        JButton button5=new JButton("x!");
        button5.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"!");
					expression+=",!";
				}else {
					jTextField.setText("0!");
					expression+=",0,!";
				}
				num=false;
				dot=false;
			}
		});
        JButton button6=new JButton("sin");
        button6.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"sin(");
				}else {
					jTextField.setText("sin(");
				}
				expression+=",sin,(";
				num=false;
				dot=false;
			}
		});
        panel.add(button6);
        JButton button7 = new JButton("(");
		button7.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"(");
				}else {
					jTextField.setText("(");
				}
				expression+=",(";
				num=false;
				dot=false;
			}
		});
     panel.add(button7);
     JButton button8 = new JButton(")");
     button8.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
             if(! "0".equals(jTextField.getText())) {
                 jTextField.setText(jTextField.getText()+")");
             }else {
                 jTextField.setText(")");
             }
             expression+=",)";
             num=false;
             dot=false;
         }
     });
     panel.add(button8);
     JButton button9 = new JButton("e");
		button9.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"e");
				}else {
					jTextField.setText("e");
				}
				expression+=",e";
				num=false;
				dot=false;
			}
		});
        panel.add(button9);
        JButton button10 = new JButton("<html><body><span>âˆš</span></body></html>");
		button10.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+Character.toString((char)8730));
				}else {
					jTextField.setText(Character.toString((char)8730));
				}
				expression+=",sqrt";
				num=false;
				dot=false;
			}
		});
        panel.add(button10);
        JButton button11 = new JButton("cos");
		button11.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"cos(");
				}else {
					jTextField.setText("cos(");
				}
				expression+=",cos,(";
				num=false;
				dot=false;
			}
		});
		panel.add(button11);
		JButton button12 = new JButton("7");
		button12.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"7");
				}else {
					jTextField.setText("7");
				}
				if(num) {
					expression+="7";
				}else {
					expression+=",7";
				}
				num=true;
			}
		});
        panel.add(button12);
		JButton button13 = new JButton("8");
		button13.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"8");
				}else {
					jTextField.setText("8");
				}
				if(num) {
					expression+="8";
				}else {
					expression+=",8";
				}
				num=true;
			}
		});
        panel.add(button13);
		
		JButton button14 = new JButton("9");
		button14.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"9");
				}else {
					jTextField.setText("9");
				}
				if(num) {
					expression+="9";
				}else {
					expression+=",9";
				}
				num=true;
			}
		});
        panel.add(button14);
		
		
		//button for division operator
		JButton button15 = new JButton("<html><body><span>Ã·</span></body></html>");
		button15.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String s=jTextField.getText();
				if(s.equals("0")) {
					expression+="0";
				}
				if(s.charAt(s.length()-1)== '-' || s.charAt(s.length()-1)== 'x' || s.charAt(s.length()-1) == '+') {
					String newString = s.substring(0,s.length()-1);
					jTextField.setText(newString+Character.toString((char)247));
					expression = expression.substring(0,expression.length()-1);
					expression += "/";
				}else if(s.charAt(s.length()-1)!= (char)247) {	
					jTextField.setText(s+Character.toString((char)247));	
					expression+=",/";
				}else {
					jTextField.setText(s);	
				}
				num=false;
				dot=false;
			}
		});
        panel.add(button15);
		
		JButton button16 = new JButton("tan");
		button16.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"tan(");
				}else {
					jTextField.setText("tan(");
				}
				expression+=",tan,(";
				num=false;
				dot=false;
			}
		});
        panel.add(button16);
		
		JButton button17 = new JButton("4");
		button17.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"4");
				}else {
					jTextField.setText("4");
				}
				if(num) {
					expression+="4";
				}else {
					expression+=",4";
				}
				num=true;
			}
		});
        panel.add(button17);
		
		JButton button18 = new JButton("5");
		button18.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"5");
				}else {
					jTextField.setText("5");
				}
				if(num) {
					expression+="5";
				}else {
					expression+=",5";
				}
				num=true;
			}
		});
        panel.add(button18);
		
		JButton button19 = new JButton("6");
		button19.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"6");
				}else {
					jTextField.setText("6");
				}
				if(num) {
					expression+="6";
				}else {
					expression+=",6";
				}
				num=true;
			}
		});
        panel.add(button19);
		
		JButton button20 = new JButton("x");
		button20.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String s=jTextField.getText();
				if(s.equals("0")) {
					expression+="0";
				}
				if(s.charAt(s.length()-1)== '-' || s.charAt(s.length()-1)== '+' || s.charAt(s.length()-1) == (char)(247)) {
					String newString = s.substring(0,s.length()-1);
					newString += "x";
					jTextField.setText(newString);
					expression = expression.substring(0,expression.length()-1);
					expression += "x";
				}else if(s.charAt(s.length()-1)!= 'x') {
					s += "x";	
					jTextField.setText(s);
					expression+=",x";
				}else {
					jTextField.setText(s);	
				}
				num=false;
				dot=false;
			}
		});
		panel.add(button20);
		JButton button21=new JButton("In");
		button21.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"ln(");
				}else {
					jTextField.setText("ln(");
				}
				expression+=",ln,(";
				num=false;
				dot=false;
			}
		});
		panel.add(button21);
		JButton button22 = new JButton("1");
		button22.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"1");
				}else {
					jTextField.setText("1");
				}
				if(num) {
					expression+="1";
				}else {
					expression+=",1";
				}
				num=true;
			}
		});
		panel.add(button22);
		JButton button23 = new JButton("2");
		button23.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"2");
				}else {
					jTextField.setText("2");
				}
				if(num) {
					expression+="2";
				}else {
					expression+=",2";
				}
				num=true;
			}
		});
		panel.add(button23);
		JButton button24 = new JButton("3");
		button24.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"3");
				}else {
					jTextField.setText("3");
				}
				if(num) {
					expression+="3";
				}else {
					expression+=",3";
				}
				num=true;
			}
		});
		panel.add(button24);
		JButton button25 = new JButton("-");
		button25.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String s=jTextField.getText();
				if(s.equals("0")) {
					expression+="0";
				}
				if(s.charAt(s.length()-1)== '+') {
					String newString = s.substring(0,s.length()-1);
					newString += "-";
					expression = expression.substring(0,expression.length()-1);
					expression += "-";
					jTextField.setText(newString);
				}else if(s.charAt(s.length()-1)!= '-') {
					s += "-";	
					jTextField.setText(s);
					expression += ",-";
				}else {
					jTextField.setText(s);	
				}
				num=false;
				dot=false;
			}
		});
		panel.add(button25);
		JButton button26 = new JButton("<html><body><span>log<sub>10</sub></span></body></html>");
		button26.setFont(new Font("Calibri Light", Font.PLAIN, 17));
		button26.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(! "0".equals(jTextField.getText())) {
					jTextField.setText(jTextField.getText()+"log(");
				}else {
					jTextField.setText("log(");
				}
				expression+=",log,(";
				num=false;
				dot=false;
			}
		});
		panel.add(button26);
		JButton button27 = new JButton(".");
		button27.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String s=jTextField.getText();
				if(s.charAt(s.length()-1)!= '.') {
					if(num && dot==false) {
						expression+=".";
						s += ".";
					}else if(num==false && dot ==false){
						expression+=",.";
						s += ".";
					}
				}
				num=true;
				dot=true;
				jTextField.setText(s);	
			}
		});
		panel.add(button27);
		JButton button28 = new JButton("0");
		button28.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if("0".equals(jTextField.getText())) {
					jTextField.setText("0");
				}else {
					jTextField.setText(jTextField.getText()+"0");
					if(num) {
						expression+="0";
					}
					else {
						expression+=",0";
					}
				}
				num=true;
			}
		});
		panel.add(button28);
		JButton button29 = new JButton("=");
		button29.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {	
				calculateMain();
					String s="";
					token.remove(token.size()-1);
					for(String i: token) {
						if(i.equals("/")) {
							s+=Character.toString((char)247);
						}else if(i.equals("sqrt")) {
							s+=Character.toString((char)8730);
						}else if(i.equals("pi")) {
							s+=Character.toString((char)960);
						}else {
							s+=i;
						}
					}
					label.setText(s+"=");
					jTextField.setText(result);
					
					expression = result;
					dot=true;
					num=true;
				token.clear();
			}
		});
	    panel.add(button29);
		JButton button30 = new JButton("+");
		button30.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String s=jTextField.getText();
				if(s.equals("0")) {
					expression+="0";
				}
				if(s.charAt(s.length()-1)== '-' || s.charAt(s.length()-1)== 'x' || s.charAt(s.length()-1) == (char)(247)) {
					String newString = s.substring(0,s.length()-1);
					newString += "+";
					jTextField.setText(newString);
					expression = expression.substring(0,expression.length()-1);
					expression += "+";
				}else if(s.charAt(s.length()-1)!= '+') {
					s += "+";	
					jTextField.setText(s);
					expression+=",+";
				}else {
					jTextField.setText(s);	
				}
				num=false;
				dot=false;
			}
		});
		panel.add(button30);
		frmCalculator.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
  }


    
        

    
